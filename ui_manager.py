# -*- coding: utf-8 -*-
"""
/***************************************************************************
 UDTPluginDialog
                                 A QGIS plugin
 Plugin que automatitza un conjunt de fluxos de treball necessaris per la Unitat de Delimitaci√≥ Territorial de l'ICGC.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2021-04-08
        git sha              : $Format:%H$
        copyright            : (C) 2021 by ICGC
        email                : Francisco.Martin@icgc.cat
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets


def get_ui_class(ui_file_name):
    """ Get UI Python class from @ui_file_name """
    # Folder that contains UI files
    ui_folder_path = os.path.join(os.path.dirname(__file__), 'ui')
    ui_file_path = os.path.join(ui_folder_path, ui_file_name)

    return uic.loadUiType(ui_file_path)[0]


BASE_FORM_CLASS = get_ui_class('udt_plugin_dialog_base.ui')

GENERADOR_MMC_FORM_CLASS = get_ui_class('generador_registre_mmc.ui')


class UDTPluginDialog(QtWidgets.QDialog, BASE_FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(UDTPluginDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)


class GeneradorMMCDialog(QtWidgets.QDialog, GENERADOR_MMC_FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(GeneradorMMCDialog, self).__init__(parent)
        self.setupUi(self)
